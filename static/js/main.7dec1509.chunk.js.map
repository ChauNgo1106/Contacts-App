{"version":3,"sources":["components/Button.js","components/Header.js","components/Contact.js","components/Contacts.js","components/AddContact.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","textColor","onClick","class","style","backgroundColor","Header","title","onAdd","showAdd","location","useLocation","className","pathname","defaultProps","Contact","contact","onDelete","onSelect","selected","onDoubleClick","id","name","cursor","cellNum","email","Contacts","contacts","map","AddContact","useState","setName","setCellNum","setEmail","setSelected","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddContact","setShowAddContact","setContacts","deleteContact","filter","select","addContact","Math","floor","random","newContact","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dec1509.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Button = ({color, text , textColor, onClick}) => {\n    return (\n        <button\n        onClick = {onClick} \n        class='btn' \n        style={{backgroundColor: color , color : textColor}}>\n            {text}</button>\n    )\n}\n\nButton.propTypes = {\n    color: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    onClick: PropTypes.func,\n}\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\nimport { useLocation } from 'react-router-dom'\n\n//instead of props.title\nconst Header = ({title , onAdd , showAdd}) => {\n    // const onClick = () => {\n    //     console.log('Click')\n    // }\n    const location = useLocation()\n    return (\n        <header className=\"header\">\n            <h1>{title}</h1>\n            {/* we will prevent the change color of add button in about */}\n            {location.pathname === '/' &&<Button \n            color={showAdd ? 'pink' : 'green'}\n            text ={showAdd ? 'Close' : 'Add'}\n            textColor = {showAdd ? 'red' : 'white'}\n            onClick = {onAdd}\n            />}\n        </header>\n    )\n}\n\n// in case no title is specified\nHeader.defaultProps ={\n    title: 'Contacts App'\n}\n\n\n//what is propTypes: check the validity of input (can be string, int, or bolean constraints)\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\nconst Contact = ({contact , onDelete , onSelect}) => {\n    return (\n        // backtick if interpolating a var into the string. and calling\n        //another var using ${}\n        <div className = {`task ${contact.selected ? 'contact' : ''}`} onDoubleClick={() => onSelect(contact.id)}>\n            <h3>{contact.name} \n            <FaTimes \n            style={{color:'red',\n            cursor: 'pointer'}} \n            onClick ={ () => onDelete(contact.id)}\n            />\n            </h3>\n            <p>Cell: {contact.cellNum}</p>\n            <p>Email: {contact.email}</p>\n        </div>\n    )\n}\n\nexport default Contact\n","import Contact from './Contact'\nimport { useState } from 'react'\n// contacts list as argument of Contacts function\nconst Contacts = ({contacts , onDelete , onSelect}) => {\n\n    return (\n        <>\n            {/* Show all contacts list */}\n            {contacts.map((contact) =>\n                // must have unique key or id\n                (<Contact \n                    key={contact.id}\n                    contact = {contact} \n                    onDelete = {onDelete}\n                    onSelect ={onSelect}/>\n                ))}\n        </>\n    )\n}\n\nexport default Contacts\n","import {useState } from 'react'\n\nconst AddContact = ({onAdd}) => {\n    const [name, setName] = useState('')\n    const [cellNum, setCellNum] = useState('')\n    const [email, setEmail] = useState('')\n    const [selected, setSelected] = useState(false)\n\n    //define onsubmit\n    const onSubmit =(e) =>{\n        e.preventDefault()\n        if(!name){\n            alert('Please add a contact')\n            return\n        }\n        onAdd({name,cellNum,email,selected})\n        //done, set all of them clear\n        setName('')\n        setCellNum('')\n        setEmail('')\n        setSelected(false)\n    }\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Name</label>\n                <input type='text' \n                placeholder='Name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}/>\n            </div>\n            <div className='form-control'>\n                <label>Cell phone number</label>\n                <input \n                type='text' \n                placeholder='Cell phone number'\n                value={cellNum}\n                onChange={(e) => setCellNum(e.target.value)} />\n            </div>\n            <div className='form-control'>\n                <label>Email</label>\n                <input \n                type='text' \n                placeholder='Email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}/>\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Selected</label>\n                <input \n                type='checkbox'\n                checked = {selected}\n                value={selected}\n                onChange={(e) => setSelected(e.currentTarget.checked)}/>\n            </div>\n            <input \n            className='btn btn-block'\n            type='submit' \n            value='Save Contact'/>\n        </form>\n        \n    )\n}\n\nexport default AddContact\n","import { Link } from 'react-router-dom'\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p>Copright &copy; 2021</p>\n            <Link to = \"/about\">About</Link>\n        </footer>\n    )\n}\n\nexport default Footer\n","import { Link } from 'react-router-dom'\n\nconst About = () => {\n    return (\n        <div>\n            <h4>Version 1.0.0</h4>\n            {/* avoid the page reload */}\n            <Link to=\"/\">Go Back</Link>\n        </div>\n    )\n}\n\nexport default About\n","import Header from './components/Header'\nimport Contacts from './components/Contacts'\n//useEffect when we want to make a change when reloading the page\nimport { useState, useEffect } from 'react'\nimport { FaTasks } from 'react-icons/fa'\nimport AddContact from './components/AddContact'\nimport Footer from './components/Footer'\nimport About from './components/About'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\n\nfunction App() {\n  //put all data inside this function as state (immutable data structure)\n\n  const [showAddContact, setShowAddContact] = useState(false)\n\n  //we will use json server to initiate our data\n\n  const [contacts, setContacts] = useState([{\n      id: 1,\n      name: 'Tam Nguyen',\n      cellNum: '612234567',\n      email: 'nguyentam@gmail.com',\n      selected: true\n    },\n    {id: 2,\n    name: 'Chau Ngo',\n    cellNum: '8120991234',\n    email: 'baochau@gmail.com',\n    selected: true\n  },\n  ,\n  {\n    id: 3,\n    name: 'Nhi Ngo',\n    cellNum: '892865',\n    email: 'nhingo@gmail.com',\n    selected: true\n  },])\n\n  //Delete\n  const deleteContact = (id) => {\n    //only show the id is differ from id argument ==> trick in JavaScript\n    setContacts(contacts.filter((contact) => contact.id !== id))\n  }\n\n  //select some contacts\n  const select = (id) => {\n\n    setContacts(\n      contacts.map((contact) =>\n        //all selected will map into opposite value when we double click it\n        contact.id === id ? { ...contact, selected: !contact.selected } : contact))\n  }\n\n  //Add a new contact\n  const addContact = (contact) => {\n    //create random id in case we are not going to deal with back end\n    const id = Math.floor(Math.random() * 10000) + 1\n    //new id with contact ==> generate an object\n    const newContact = { id, ...contact }\n    //add this object into contacts list\n    setContacts([...contacts, newContact])\n\n  }\n  return (\n    <Router>\n      <div className=\"container\">\n        {/* pass title as parameter of Header */}\n        <Header\n          title={'Contacts'}\n          onAdd={() => setShowAddContact(!showAddContact)}\n          showAdd={showAddContact} />\n        {/* if showAddContact is true show AddContact, otherwise, not show */}\n\n        <Route path='/' exact render={(props) => (\n          <>\n            {showAddContact && <AddContact onAdd={addContact} />}\n            {contacts.length > 0 ? <Contacts\n              contacts={contacts}\n              onDelete={deleteContact}\n              onSelect={select} />\n              : 'No More Contacts To Show'\n            }\n          </>\n        )}\n        />\n        <Route path='/about' component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // App is in root component, and App is also Component in React\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}